// <auto-generated />
using System;
using AlphaMarketPDV.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlphaMarketPDV.Migrations
{
    [DbContext(typeof(AlphaMarketPDVContext))]
    [Migration("20210807210150_tentando_1")]
    partial class tentando_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AlphaMarketPDV.Models.Caixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<int>("TipoOperacao");

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Caixa");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.CaixaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CaixaId");

                    b.Property<int?>("FormaPagamentoId");

                    b.Property<int>("NrSeq");

                    b.Property<double>("ValoTroco");

                    b.Property<double>("ValorPago");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("FormaPagamentoId");

                    b.ToTable("CaixaPagamento");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular");

                    b.Property<string>("Email");

                    b.Property<int?>("FornecedorId");

                    b.Property<int>("Ramal");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cep");

                    b.Property<string>("Cidade");

                    b.Property<string>("Lougradouro");

                    b.Property<string>("Uf");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.EntradaEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<DateTime>("DataHoraInformada");

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("Observacao");

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EntradaEstoque");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Saldo");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao");

                    b.Property<bool>("GeraTroco");

                    b.HasKey("Id");

                    b.ToTable("FormaPagamento");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("EndComplemento");

                    b.Property<string>("EndNumero");

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("InscrEstadual");

                    b.Property<string>("InscrMunicipal");

                    b.Property<string>("NomeFantasia");

                    b.Property<string>("NomeRepresentante");

                    b.Property<string>("NumDocumento");

                    b.Property<string>("Observacoes");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("Site");

                    b.Property<int>("TipoEmpresa");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemEntradaEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EntradaEstoqueId");

                    b.Property<int>("NrSeq");

                    b.Property<int?>("ProdutoId");

                    b.Property<double>("Qtd");

                    b.Property<double>("ValorItem");

                    b.Property<double>("ValorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("EntradaEstoqueId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemEntradaEstoque");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemSaidaEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NrSeq");

                    b.Property<int?>("ProdutoId");

                    b.Property<double>("Qtd");

                    b.Property<int?>("SaidaEstoqueId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SaidaEstoqueId");

                    b.ToTable("ItemSaidaEstoque");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Cancelado");

                    b.Property<int>("NrSeq");

                    b.Property<int?>("ProdutoId");

                    b.Property<double>("Qtd");

                    b.Property<double>("ValorItem");

                    b.Property<double>("ValorUnitario");

                    b.Property<int?>("VendaId");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("ItemVenda");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<int>("CategoriaId");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(13);

                    b.Property<DateTime>("DataHoraCadastro");

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DescricaoLonga")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("EstoqueId");

                    b.Property<string>("Foto");

                    b.Property<string>("Observacoes");

                    b.Property<double>("QuantMinima");

                    b.Property<int>("UnidadeMedidaId");

                    b.Property<double>("ValorVenda");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("UnidadeMedidaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.SaidaEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<DateTime>("DataHoraInformada");

                    b.Property<string>("Justificativa");

                    b.Property<int?>("UsuarioId");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SaidaEstoque");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedida");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CaixaId");

                    b.Property<DateTime>("DataHora");

                    b.Property<int>("Status");

                    b.Property<double>("ValorDesconto");

                    b.Property<double>("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Caixa", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.CaixaPagamento", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Caixa", "Caixa")
                        .WithMany("CaixaPagamentos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("AlphaMarketPDV.Models.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Contato", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Fornecedor", "Fornecedor")
                        .WithMany("Contatos")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.EntradaEstoque", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("AlphaMarketPDV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Fornecedor", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Endereco", "Endereco")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemEntradaEstoque", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.EntradaEstoque", "EntradaEstoque")
                        .WithMany("ItensEntradaEstoque")
                        .HasForeignKey("EntradaEstoqueId");

                    b.HasOne("AlphaMarketPDV.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemSaidaEstoque", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("AlphaMarketPDV.Models.SaidaEstoque", "SaidaEstoque")
                        .WithMany("ItensSaidaEstoque")
                        .HasForeignKey("SaidaEstoqueId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.ItemVenda", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("AlphaMarketPDV.Models.Venda", "Venda")
                        .WithMany("ItensVenda")
                        .HasForeignKey("VendaId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Produto", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AlphaMarketPDV.Models.Estoque", "Estoque")
                        .WithMany("Produtos")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlphaMarketPDV.Models.UnidadeMedida", "UnidadeMedida")
                        .WithMany("Produtos")
                        .HasForeignKey("UnidadeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.SaidaEstoque", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AlphaMarketPDV.Models.Venda", b =>
                {
                    b.HasOne("AlphaMarketPDV.Models.Caixa", "Caixa")
                        .WithMany()
                        .HasForeignKey("CaixaId");
                });
#pragma warning restore 612, 618
        }
    }
}
